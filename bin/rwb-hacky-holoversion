#!/bin/bash -eu

RWB_SCRIPT_DIR=$(dirname $0)
. $RWB_SCRIPT_DIR/rwb-functions

# This sets the package- and deployment-specific env vars
. ./rwb-package-config.env

PACKAGE_NAME=$(cargo_package_name)

GIT_DESCRIBE=$(git describe --tags --long --dirty=.modified)

HOLOVERSION=$PACKAGE_NAME-$GIT_DESCRIBE

# Add a hash of the content if the git repo has been modified.
# 0 means true, nonzero means false (shell script convention).
IS_MODIFIED=$(echo $GIT_DESCRIBE | fgrep -q ".modified"; echo "$?")
if [ $IS_MODIFIED -eq 0 ]; then
    # Use the hash.
    # Just take the hex encoded hash value, not the file name.
    if [ "$(echo $RWB_CRATE_IS_INSIDE_CARGO_WORKSPACE | tr '[:upper:]' '[:lower:]')" = "true" ]; then
        # Note that ../Cargo.lock is included so that any updates to workspace dependencies affect the hash.
        SHA256SUM=$(tar -c --exclude=.git --exclude=target --exclude=$RWB_LOCAL_BUILDS_DIR --exclude=$RWB_GENERATED_SOURCE_PATH . ../Cargo.lock | sha256sum)
    else
        SHA256SUM=$(tar -c --exclude=.git --exclude=target --exclude=$RWB_LOCAL_BUILDS_DIR --exclude=$RWB_GENERATED_SOURCE_PATH . | sha256sum)
    fi
    # xxd is a hex-to-binary converter CLI utility.  base32 does base32 encoding.  The tr part
    # strips off the '=' padding chars.
    HASH=$(echo -n $SHA256SUM | egrep -o "^[a-fA-F0-9]*" | xxd -r -p | base32 | tr -d '=')
    HOLOVERSION=$HOLOVERSION-$HASH
fi

echo $HOLOVERSION
