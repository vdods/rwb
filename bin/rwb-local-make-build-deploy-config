#!/bin/bash -eu

if [ -e rwb-build-deploy-config.env ]; then
    echo "Error: rwb-build-deploy-config.env file already exists -- aborting now to avoid overwriting it." 1>&2
    exit 1
fi

echo "# This file defines the build/deploy-specific env vars, used in the other scripts.
# This should be run directly in an existing shell, not a subshell (though you, dear user,
# shouldn't have to invoke this directly).  This file should (could) contain cross-project
# configuration for build/deploy and should (could) be executed in the user's '.profile'.
# These env vars could also be put into rwb-package-config.env if per-project build/deploy
# configuration is desired.  These values should be edited to reflect your particular
# configuration.

# This must specify where the named rwb crate subdirs will go, one for each crate.  Under each of those is the
# versioned build dirs themselves.  Specifying a relative path here will create the builds under this project's
# root dir.  Another sensible choice is a single absolute path that will contain all builds for all projects,
# e.g. to have a persistent library of builds, and not have them clog up this project root dir.
export RWB_LOCAL_BUILDS_DIR=~/rwb-builds
# This must specify the port that will be used when hosting builds on the localhost server.  This could be
# specified on a per-project basis in case it was necessary to use separate HTTP servers for each build.
export RWB_LOCAL_HOST_BUILD_HTTP_PORT=8080

# This must specify the target host for deploying builds via ssh.
export RWB_REMOTE_SSH_TARGET=username@hostname
# This must specify the base URL for the WWW server, corresponding to the root content dir, for
# constructing the convenience link upon running rwb-remote-set-active-build -- it SHOULD NOT
# end with a / character.
export RWB_REMOTE_WWW_BASE_URL=https://www.host.com
# This must specify the root content dir for the web server that will host the build.
export RWB_REMOTE_ROOT_DIR=/var/www/html
# This must specify where the named rwb crate subdirs will go, one for each crate, on the remote server.
export RWB_REMOTE_BUILDS_DIR=\$RWB_REMOTE_ROOT_DIR/rwb-builds
" > rwb-build-deploy-config.env

echo "Successfully wrote to rwb-build-deploy-config.env -- now open that file and edit the env vars to reflect your particular configuration."
